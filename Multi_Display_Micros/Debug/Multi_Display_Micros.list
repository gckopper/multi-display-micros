
Multi_Display_Micros.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000174  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000338  08000340  00010340  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .init_array   00000004  08000338  08000338  00010338  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  0800033c  0800033c  0001033c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000000  20000000  20000000  00010340  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000001c  20000000  08000340  00020000  2**2
                  ALLOC
  7 ._user_heap_stack 00000400  2000001c  08000340  0002001c  2**0
                  ALLOC
  8 .ARM.attributes 00000030  00000000  00000000  00010340  2**0
                  CONTENTS, READONLY
  9 .debug_info   00000675  00000000  00000000  00010370  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000001ba  00000000  00000000  000109e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000070  00000000  00000000  00010ba0  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00010c10  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000003e7  00000000  00000000  00010c58  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00000397  00000000  00000000  0001103f  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .comment      0000007c  00000000  00000000  000113d6  2**0
                  CONTENTS, READONLY
 16 .debug_frame  000000b0  00000000  00000000  00011454  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .stabstr      0000003f  00000000  00000000  00011504  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000320 	.word	0x08000320

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000320 	.word	0x08000320

08000204 <main>:
**  Abstract: main program
**
**===========================================================================
*/
int main(void)
{
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
  int i = 0;
 800020a:	2300      	movs	r3, #0
 800020c:	607b      	str	r3, [r7, #4]
  /* TODO - Add your application code here */

  /* Infinite loop */
  while (1)
  {
	i++;
 800020e:	687b      	ldr	r3, [r7, #4]
 8000210:	3301      	adds	r3, #1
 8000212:	607b      	str	r3, [r7, #4]
 8000214:	e7fb      	b.n	800020e <main+0xa>
	...

08000218 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8000218:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000250 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800021c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800021e:	e003      	b.n	8000228 <LoopCopyDataInit>

08000220 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000220:	4b0c      	ldr	r3, [pc, #48]	; (8000254 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000222:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000224:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000226:	3104      	adds	r1, #4

08000228 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000228:	480b      	ldr	r0, [pc, #44]	; (8000258 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800022a:	4b0c      	ldr	r3, [pc, #48]	; (800025c <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 800022c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800022e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000230:	d3f6      	bcc.n	8000220 <CopyDataInit>
  ldr  r2, =_sbss
 8000232:	4a0b      	ldr	r2, [pc, #44]	; (8000260 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000234:	e002      	b.n	800023c <LoopFillZerobss>

08000236 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000236:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000238:	f842 3b04 	str.w	r3, [r2], #4

0800023c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 800023c:	4b09      	ldr	r3, [pc, #36]	; (8000264 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 800023e:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000240:	d3f9      	bcc.n	8000236 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000242:	f000 f813 	bl	800026c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000246:	f000 f847 	bl	80002d8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800024a:	f7ff ffdb 	bl	8000204 <main>
  bx  lr    
 800024e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8000250:	20020000 	.word	0x20020000
  ldr  r3, =_sidata
 8000254:	08000340 	.word	0x08000340
  ldr  r0, =_sdata
 8000258:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 800025c:	20000000 	.word	0x20000000
  ldr  r2, =_sbss
 8000260:	20000000 	.word	0x20000000
  ldr  r3, = _ebss
 8000264:	2000001c 	.word	0x2000001c

08000268 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000268:	e7fe      	b.n	8000268 <ADC_IRQHandler>
	...

0800026c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800026c:	b480      	push	{r7}
 800026e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000270:	4a16      	ldr	r2, [pc, #88]	; (80002cc <SystemInit+0x60>)
 8000272:	4b16      	ldr	r3, [pc, #88]	; (80002cc <SystemInit+0x60>)
 8000274:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000278:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800027c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8000280:	4a13      	ldr	r2, [pc, #76]	; (80002d0 <SystemInit+0x64>)
 8000282:	4b13      	ldr	r3, [pc, #76]	; (80002d0 <SystemInit+0x64>)
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	f043 0301 	orr.w	r3, r3, #1
 800028a:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 800028c:	4b10      	ldr	r3, [pc, #64]	; (80002d0 <SystemInit+0x64>)
 800028e:	2200      	movs	r2, #0
 8000290:	609a      	str	r2, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8000292:	4a0f      	ldr	r2, [pc, #60]	; (80002d0 <SystemInit+0x64>)
 8000294:	4b0e      	ldr	r3, [pc, #56]	; (80002d0 <SystemInit+0x64>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 800029c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80002a0:	6013      	str	r3, [r2, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 80002a2:	4b0b      	ldr	r3, [pc, #44]	; (80002d0 <SystemInit+0x64>)
 80002a4:	4a0b      	ldr	r2, [pc, #44]	; (80002d4 <SystemInit+0x68>)
 80002a6:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 80002a8:	4a09      	ldr	r2, [pc, #36]	; (80002d0 <SystemInit+0x64>)
 80002aa:	4b09      	ldr	r3, [pc, #36]	; (80002d0 <SystemInit+0x64>)
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80002b2:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 80002b4:	4b06      	ldr	r3, [pc, #24]	; (80002d0 <SystemInit+0x64>)
 80002b6:	2200      	movs	r2, #0
 80002b8:	60da      	str	r2, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80002ba:	4b04      	ldr	r3, [pc, #16]	; (80002cc <SystemInit+0x60>)
 80002bc:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80002c0:	609a      	str	r2, [r3, #8]
#endif
}
 80002c2:	bf00      	nop
 80002c4:	46bd      	mov	sp, r7
 80002c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ca:	4770      	bx	lr
 80002cc:	e000ed00 	.word	0xe000ed00
 80002d0:	40023800 	.word	0x40023800
 80002d4:	24003010 	.word	0x24003010

080002d8 <__libc_init_array>:
 80002d8:	b570      	push	{r4, r5, r6, lr}
 80002da:	4e0d      	ldr	r6, [pc, #52]	; (8000310 <__libc_init_array+0x38>)
 80002dc:	4c0d      	ldr	r4, [pc, #52]	; (8000314 <__libc_init_array+0x3c>)
 80002de:	1ba4      	subs	r4, r4, r6
 80002e0:	10a4      	asrs	r4, r4, #2
 80002e2:	2500      	movs	r5, #0
 80002e4:	42a5      	cmp	r5, r4
 80002e6:	d109      	bne.n	80002fc <__libc_init_array+0x24>
 80002e8:	4e0b      	ldr	r6, [pc, #44]	; (8000318 <__libc_init_array+0x40>)
 80002ea:	4c0c      	ldr	r4, [pc, #48]	; (800031c <__libc_init_array+0x44>)
 80002ec:	f000 f818 	bl	8000320 <_init>
 80002f0:	1ba4      	subs	r4, r4, r6
 80002f2:	10a4      	asrs	r4, r4, #2
 80002f4:	2500      	movs	r5, #0
 80002f6:	42a5      	cmp	r5, r4
 80002f8:	d105      	bne.n	8000306 <__libc_init_array+0x2e>
 80002fa:	bd70      	pop	{r4, r5, r6, pc}
 80002fc:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000300:	4798      	blx	r3
 8000302:	3501      	adds	r5, #1
 8000304:	e7ee      	b.n	80002e4 <__libc_init_array+0xc>
 8000306:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800030a:	4798      	blx	r3
 800030c:	3501      	adds	r5, #1
 800030e:	e7f2      	b.n	80002f6 <__libc_init_array+0x1e>
 8000310:	08000338 	.word	0x08000338
 8000314:	08000338 	.word	0x08000338
 8000318:	08000338 	.word	0x08000338
 800031c:	0800033c 	.word	0x0800033c

08000320 <_init>:
 8000320:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000322:	bf00      	nop
 8000324:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000326:	bc08      	pop	{r3}
 8000328:	469e      	mov	lr, r3
 800032a:	4770      	bx	lr

0800032c <_fini>:
 800032c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800032e:	bf00      	nop
 8000330:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000332:	bc08      	pop	{r3}
 8000334:	469e      	mov	lr, r3
 8000336:	4770      	bx	lr
